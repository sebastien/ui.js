@layer layout {
  /**
	* ## Presentation & Formatting 
	*/
  /**
    * `bd` and its `-{t,r,b,l}` variants sets a border on the element.
	*/
  .bd {
    border: 1px solid var(--color-bd);
  }
  .bd-t {
    border-top: 1px solid var(--color-bd);
  }
  .bd-b {
    border-bottom: 1px solid var(--color-bd);
  }
  .bd-r {
    border-right: 1px solid var(--color-bd);
  }
  .bd-l {
    border-left: 1px solid var(--color-bd);
  }

  .dimmed {
    opacity: 0.65;
  }

  .small {
    font-size: 0.85rem;
  }
  /**
	* ## Content formatting
	*/
  .nowrap {
    white-space: nowrap;
  }
  .pad {
    padding: var(--pad-1);
  }
  .pad-1 {
    padding: var(--pad-1);
  }
  .pad-2 {
    padding: var(--pad-2);
  }
  .pad-r {
    padding-right: var(--pad-1);
  }
  .pad-l {
    padding-left: var(--pad-1);
  }
  .pad-t {
    padding-top: var(--pad-1);
  }
  .pad-b {
    padding-bottom: var(--pad-1);
  }

  .gap {
    gap: var(--pad-1);
  }
  /**
   * ## Box Model
*/
  .pos-rel {
    position: relative;
  }
  .pos-abs {
    position: absolute;
  }
  .pos-lr {
    bottom: 0px;
    right: 0px;
  }
  .scroll-h {
    overflow-y: scroll;
  }
  .noscroll-h {
    overflow-y: hidden;
  }

  /**
	* ## Layout
	*/
  /**
   * `fit` ensures that the content fits the parent, expanding both
   * its width and height. `fit-w` and `fit-`h` are variants that only
   * do this for the width and height.
	*/
  .fit {
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
  }
  .fit-w {
    box-sizing: border-box;
    width: 100%;
    max-width: 100%;
  }
  .fit-h {
    box-sizing: border-box;
    height: 100%;
    max-height: 100%;
  }

  /**
   * `fit-screen` fits (covers) the whole screen, and also sets  the position
   * to `fixed'.
   */
  .fit-screen {
    position: fixed;
    top: 0px;
    left: 0px;
    width: 100vw;
    height: 100vh;
    max-width: 100vw;
    max-height: 100vh;
  }

  .columns {
    display: flex;
    align-items: flex-start;
  }

  .row {
    display: flex;
    align-items: center;
  }

  .row.right {
    justify-content: flex-end;
  }

  .noshrink {
    flex-shrink: 0;
  }
  .grow {
    flex-grow: 1;
  }
  .fixed {
    flex-shrink: 0;
    flex-grow: 0;
  }

  .stack {
    display: flex;
    flex-direction: column;
  }

  .stack > .grow {
    flex-grow: 1;
  }

  .stack {
    display: flex;
    flex-direction: column;
  }

  .list-h {
    display: inline-flex;
    flex-wrap: wrap;
    gap: var(--pad-0);
  }
}
/* EOF */
