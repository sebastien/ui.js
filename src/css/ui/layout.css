/**
   * ## Box Model
*/

.inline {
	display: inline-block;
}

.sticky {
	position: sticky;
}

.sticky-t {
	position: sticky;
	top: 0px;
}

.container {
	position: relative;
}

.pos-rel {
	position: relative;
}

.pos-abs {
	position: absolute;
}

.pos-lr {
	bottom: 0px;
	right: 0px;
}

.to-t {
	top: 0px;
}

.to-r {
	left: 100%;
}

.to-b {
	top: 100%;
}

.to-l {
	left: 0;
	transform: translateX(-100%);
}

.pannable,
.scroll-h {
	overflow-x: auto;
}

.noscroll-h {
	overflow-x: hidden;
}

.pannable,
.scrollable,
.scroll-v {
	overflow-y: auto;
}

.noscroll-v {
	overflow-y: hidden;
}

.compact {
	width: min-content;
}

.squared {
	width: 100%;
	padding-top: 100%;
	position: relative;
}

.squared>* {
	position: absolute;
	top: 0px;
	bottom: 0px;
	left: 0px;
	right: 0px;
	overflow: auto;
}

/**
	* ## Layout
	*/
/**
   * `fit` ensures that the content fits the parent, expanding both
   * its width and height. `fit-w` and `fit-`h` are variants that only
   * do this for the width and height.
	*/
.expand {
	position: absolute;
	box-sizing: border-box;
	top: 0px;
	bottom: 0px;
	left: 0px;
	right: 0px;
}

.expand-h {
	position: absolute;
	box-sizing: border-box;
	top: 0px;
	bottom: 0px;
}

.expand-w {
	position: absolute;
	box-sizing: border-box;
	left: 0px;
	right: 0px;
}

.fit {
	box-sizing: border-box;
	width: 100%;
	height: 100%;
	max-width: 100%;
	max-height: 100%;
	min-height: 100%;
	max-height: 100%;
}

.fit-w {
	box-sizing: border-box;
	width: 100%;
	max-width: 100%;
}

.fit-h {
	box-sizing: border-box;
	height: 100%;
	max-height: 100%;
}

.fit-content {
	width: min-content;
}

.fix-w {
	min-width: var(--width);
	max-width: var(--width);
}

.fix-h {
	min-height: var(--height);
	max-height: var(--height);
}

.bl {
	display: block;
}

.ibl {
	display: inline-block;
}

.fl {
	display: inline;
}

.ifl {
	display: inline-flex;
}

.fit-page {
	max-width: var(--page-width);
}

.fit-text {
	max-width: var(--text-width);
}



/* @tmpl
   * range(10).map(_ => `\n  .w-${_+1}col { width: calc(var(--col-width) * ${_+1}); }`)
  */
.w-1col {
	width: calc(var(--col-width) * 1);
}

.w-2col {
	width: calc(var(--col-width) * 2);
}

.w-3col {
	width: calc(var(--col-width) * 3);
}

.w-4col {
	width: calc(var(--col-width) * 4);
}

.w-5col {
	width: calc(var(--col-width) * 5);
}

.w-6col {
	width: calc(var(--col-width) * 6);
}

.w-7col {
	width: calc(var(--col-width) * 7);
}

.w-8col {
	width: calc(var(--col-width) * 8);
}

.w-9col {
	width: calc(var(--col-width) * 9);
}

.w-10col {
	width: calc(var(--col-width) * 10);
}

/* @end */
/* @tmpl
   * range(10).map(_ => `\n  .wmax-${_+1}col { max-width: calc(var(--col-width) * ${_+1}); }`)
  */
.wmax-1col {
	max-width: calc(var(--col-width) * 1);
}

.wmax-2col {
	max-width: calc(var(--col-width) * 2);
}

.wmax-3col {
	max-width: calc(var(--col-width) * 3);
}

.wmax-4col {
	max-width: calc(var(--col-width) * 4);
}

.wmax-5col {
	max-width: calc(var(--col-width) * 5);
}

.wmax-6col {
	max-width: calc(var(--col-width) * 6);
}

.wmax-7col {
	max-width: calc(var(--col-width) * 7);
}

.wmax-8col {
	max-width: calc(var(--col-width) * 8);
}

.wmax-9col {
	max-width: calc(var(--col-width) * 9);
}

.wmax-10col {
	max-width: calc(var(--col-width) * 10);
}

/* @end */
/* @tmpl
   * range(10).map(_ => `\n  .wmin-${_+1}col { min-width: calc(var(--col-width) * ${_+1}); }`)
  */
.wmin-1col {
	min-width: calc(var(--col-width) * 1);
}

.wmin-2col {
	min-width: calc(var(--col-width) * 2);
}

.wmin-3col {
	min-width: calc(var(--col-width) * 3);
}

.wmin-4col {
	min-width: calc(var(--col-width) * 4);
}

.wmin-5col {
	min-width: calc(var(--col-width) * 5);
}

.wmin-6col {
	min-width: calc(var(--col-width) * 6);
}

.wmin-7col {
	min-width: calc(var(--col-width) * 7);
}

.wmin-8col {
	min-width: calc(var(--col-width) * 8);
}

.wmin-9col {
	min-width: calc(var(--col-width) * 9);
}

.wmin-10col {
	min-width: calc(var(--col-width) * 10);
}

/* @end */
/* @tmpl
   * range(10).map(_ => `\n  .w-${_+1}b { --width: calc(var(--block-size) * ${_+1}); width:var(--width); }`)
  */
.w-1b {
	--width: calc(var(--block-size) * 1);
	width: var(--width);
}

.w-2b {
	--width: calc(var(--block-size) * 2);
	width: var(--width);
}

.w-3b {
	--width: calc(var(--block-size) * 3);
	width: var(--width);
}

.w-4b {
	--width: calc(var(--block-size) * 4);
	width: var(--width);
}

.w-5b {
	--width: calc(var(--block-size) * 5);
	width: var(--width);
}

.w-6b {
	--width: calc(var(--block-size) * 6);
	width: var(--width);
}

.w-7b {
	--width: calc(var(--block-size) * 7);
	width: var(--width);
}

.w-8b {
	--width: calc(var(--block-size) * 8);
	width: var(--width);
}

.w-9b {
	--width: calc(var(--block-size) * 9);
	width: var(--width);
}

.w-10b {
	--width: calc(var(--block-size) * 10);
	width: var(--width);
}

/* @end */
/* @tmpl
   * range(10).map(_ => `\n  .h-${_+1}b { --height: calc(var(--block-size) * ${_+1}); height: var(--height); }`)
  */
.h-1b {
	--height: calc(var(--block-size) * 1);
	height: var(--height);
}

.h-2b {
	--height: calc(var(--block-size) * 2);
	height: var(--height);
}

.h-3b {
	--height: calc(var(--block-size) * 3);
	height: var(--height);
}

.h-4b {
	--height: calc(var(--block-size) * 4);
	height: var(--height);
}

.h-5b {
	--height: calc(var(--block-size) * 5);
	height: var(--height);
}

.h-6b {
	--height: calc(var(--block-size) * 6);
	height: var(--height);
}

.h-7b {
	--height: calc(var(--block-size) * 7);
	height: var(--height);
}

.h-8b {
	--height: calc(var(--block-size) * 8);
	height: var(--height);
}

.h-9b {
	--height: calc(var(--block-size) * 9);
	height: var(--height);
}

.h-10b {
	--height: calc(var(--block-size) * 10);
	height: var(--height);
}

/* @end */
/* @tmpl
   * range(20).map(_ => `\n  .w-${_}c { width: ${_}ch; }`)
   */
.w-0c {
	width: 0ch;
}

.w-1c {
	width: 1ch;
}

.w-2c {
	width: 2ch;
}

.w-3c {
	width: 3ch;
}

.w-4c {
	width: 4ch;
}

.w-5c {
	width: 5ch;
}

.w-6c {
	width: 6ch;
}

.w-7c {
	width: 7ch;
}

.w-8c {
	width: 8ch;
}

.w-9c {
	width: 9ch;
}

.w-10c {
	width: 10ch;
}

.w-11c {
	width: 11ch;
}

.w-12c {
	width: 12ch;
}

.w-13c {
	width: 13ch;
}

.w-14c {
	width: 14ch;
}

.w-15c {
	width: 15ch;
}

.w-16c {
	width: 16ch;
}

.w-17c {
	width: 17ch;
}

.w-18c {
	width: 18ch;
}

.w-19c {
	width: 19ch;
}

/* @end */

/**
   * `fit-screen` fits (covers) the whole screen, and also sets  the position
   * to `fixed'.
   */
.fit-screen {
	position: fixed;
	top: 0px;
	left: 0px;
	width: 100vw;
	height: 100vh;
	max-width: 100vw;
	max-height: 100vh;
}




.columns {
	display: flex;
	align-items: flex-start;
}



.row {
	display: flex;
	align-items: center;
	gap: var(--gap);
}

.row.inline {
	display: inline-flex;
}

.row.stretched {
	align-items: stretch;
}

.row.fitted {
	justify-items: stretch;
}

.row>.fitted {
	align-self: stretch;
}

.row.distribute {
	justify-content: space-between;
}

.row>.fill {
	flex: 1;
}

.row>.stretch {
	align-self: stretch;
}

.row.right {
	justify-content: flex-end;
}

.row.top {
	align-items: flex-start;
}

.row.centered {
	align-items: center;
	justify-content: center;
}

.row.middle {
	align-items: center;
}

.row.stretch {
	align-items: stretch;
}

.row.wrap {
	flex-wrap: wrap;
}

.noshrink {
	flex-shrink: 0;
}

.grow {
	flex-grow: 1;
}

.fixed {
	flex-shrink: 0;
	flex-grow: 0;
}

.stack {
	display: flex;
	flex-direction: column;
	gap: var(--gap);
}

.stack.centered {
	align-items: center;
}

.stack.fill {
	justify-content: stretch;
}

.stack>.grow,
.stack>.fill {
	flex-grow: 1;
}

.list-h {
	--gap: var(--pad-1);
	display: inline-flex;
	flex-wrap: wrap;
	flex-direction: row;
	gap: var(--gap);
}

.list-v {
	--gap: var(--pad-1);
	display: flex;
	flex-direction: column;
	gap: var(--gap);
}

.sep-slash>*:after {
	display: inline-block;
	padding-left: var(--gap);
	content: "/";
}

.sep-slash>*:last-child:after {
	display: none;
	padding-left: 0px;
	content: "/";
}

.grid-1_1 {
	display: grid;
	grid-template-columns: 1fr 1fr;
}

.grid-1_2 {
	display: grid;
	grid-template-columns: 1fr 2fr;
}

.by-4 {
	display: grid;
	grid-template-columns: 1fr 1fr 1fr 1fr;
	grid-column-gap: var(--gap);
}





.by-3 {
	display: grid;
	grid-template-columns: 1fr 1fr 1fr;
	grid-column-gap: var(--gap);
}

.by-2 {
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-column-gap: var(--gap);
}

.container {
	container-type: inline-size;
}

/* FIXME: The steps should be adjusted */
@container (width < 960px) {
	.by-4 {
		grid-template-columns: 1fr 1fr 1fr;
	}
}

@container (width < 720px) {

	.by-4,
	.by-3 {
		grid-template-columns: 1fr 1fr;
	}
}

@container (width < 360px) {

	.by-4,
	.by-3 {
		grid-template-columns: 1fr;
	}
}

/**
 * The width is set to the max content 
 */
.fit-content {
	width: max-content;
}


/* EOF */
